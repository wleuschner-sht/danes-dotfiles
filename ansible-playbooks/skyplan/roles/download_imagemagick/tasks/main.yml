---
- name: Ensure Homebrew is installed (Intel and Apple Silicon)
  stat:
    path: "{{ item }}"
  loop:
    - /opt/homebrew/bin/brew
    - /usr/local/bin/brew
  register: homebrew_paths
  when: ansible_facts['os_family'] == 'Darwin'

- name: Set fact for Homebrew installation status
  set_fact:
    homebrew_installed: "{{ homebrew_paths.results | selectattr('stat.exists', 'equalto', true) | list | length > 0 }}"
  when: ansible_facts['os_family'] == 'Darwin'

- name: Install Homebrew if not installed
  shell: |
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  args:
    executable: /bin/zsh
  when:
    - ansible_facts['os_family'] == 'Darwin'
    - not homebrew_installed

# üß™ Check if ImageMagick is already installed
- name: Check if ImageMagick is installed
  command: magick -version
  register: imagemagick_version
  changed_when: false
  failed_when: false

- name: Set skip flag if ImageMagick is installed and version is sufficient
  set_fact:
    imagemagick_skip_install: "{{ imagemagick_version.stdout is search('ImageMagick') }}"
  when: imagemagick_version.rc == 0

- name: Set default skip flag if not already defined
  set_fact:
    imagemagick_skip_install: false
  when: imagemagick_skip_install is not defined

# üì¶ Install Dependencies
- name: Ensure ImageMagick dependencies are installed via Homebrew
  homebrew:
    name:
      - jpeg
      - libpng
      - libtiff
      - freetype
      - libheif
      - webp
      - pkg-config
      - libtool
      - autoconf
      - automake
    state: present
  when:
    - ansible_facts['os_family'] == 'Darwin'
    - not imagemagick_skip_install

# ‚¨áÔ∏è Download and Build ImageMagick
- name: Download ImageMagick source tarball
  get_url:
    url: "{{ imagemagick_url }}"
    dest: "/tmp/{{ imagemagick_archive }}"
    mode: "0644"
  when: not imagemagick_skip_install

- name: Extract ImageMagick tarball
  unarchive:
    src: "/tmp/{{ imagemagick_archive }}"
    dest: /tmp
    remote_src: yes
    creates: "/tmp/{{ imagemagick_src_dir }}"
  when: not imagemagick_skip_install

- name: Clean previous build artifacts if any
  shell: make distclean || true
  args:
    chdir: "/tmp/{{ imagemagick_src_dir }}"
    executable: /bin/zsh
  when: not imagemagick_skip_install

- name: Configure ImageMagick source without JXL
  shell: |
    export LDFLAGS="-L/opt/homebrew/lib -L/usr/local/lib"
    export CPPFLAGS="-I/opt/homebrew/include -I/usr/local/include"
    export PKG_CONFIG_PATH="/opt/homebrew/lib/pkgconfig:/usr/local/lib/pkgconfig"
    ./configure --prefix={{ imagemagick_install_prefix }} \
                --with-quantum-depth=16 \
                --disable-dependency-tracking \
                --without-perl \
                --without-jxl
  args:
    chdir: "/tmp/{{ imagemagick_src_dir }}"
    executable: /bin/zsh
  when: not imagemagick_skip_install

- name: Compile ImageMagick
  shell: make -j 4
  args:
    chdir: "/tmp/{{ imagemagick_src_dir }}"
    executable: /bin/zsh
  when: not imagemagick_skip_install

- name: Install ImageMagick
  become: true
  shell: make install
  args:
    chdir: "/tmp/{{ imagemagick_src_dir }}"
    executable: /bin/zsh
  when: not imagemagick_skip_install
