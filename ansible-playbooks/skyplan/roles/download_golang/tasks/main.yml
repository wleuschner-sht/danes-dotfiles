---
- name: Ensure curl and tar are installed (macOS only)
  homebrew:
    name: "{{ item }}"
    state: present
  loop:
    - curl
    - gnu-tar
  when: ansible_facts['os_family'] == 'Darwin'

- name: Uninstall Homebrew Go (if exists)
  homebrew:
    name: go
    state: absent

- name: Remove existing Go installation (if any)
  become: true
  file:
    path: "{{ go_install_dir }}"
    state: absent

- name: Download Go {{ go_version }} tarball
  get_url:
    url: "{{ go_url }}"
    dest: "/tmp/{{ go_tarball }}"
    mode: "0644"
    validate_certs: no

- name: Extract Go to /usr/local
  become: true
  unarchive:
    src: "/tmp/{{ go_tarball }}"
    dest: "/usr/local"
    remote_src: yes
    extra_opts: ["--strip-components=1"]

- name: Ensure Go is in PATH (system binary)
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: 'export PATH="$PATH:/usr/local/go/bin"'
    insertafter: EOF
    state: present

- name: Ensure GOPATH/bin is in PATH
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: 'export PATH="$PATH:{{ ansible_env.HOME }}/go/bin"'
    insertafter: EOF
    state: present

- name: Create GOPATH bin directory
  file:
    path: "{{ ansible_env.HOME }}/go/bin"
    state: directory
    mode: "0755"

- name: Verify Go version
  shell: |
    source ~/.zshrc
    go version
  args:
    executable: /bin/zsh
  register: go_version_result
  changed_when: false

- name: Output active Go version
  debug:
    var: go_version_result.stdout
